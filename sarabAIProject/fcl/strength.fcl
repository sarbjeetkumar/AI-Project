FUNCTION_BLOCK strength 	//Function Block

	VAR_INPUT 				//Input variables
			weapon : REAL; 		
			playerStrength : REAL;	
			enemyStrength : REAL;   	
	END_VAR
	
	VAR_OUTPUT 				//Output variable
			victory : REAL;  	
	END_VAR
	
	FUZZIFY weapon						// Fuzzify weapon: { 'deadly', 'medium','light' }
			TERM deadly := (60, 0) (100, 1);
			TERM medium := trian 30 50 70;
			TERM light := (0, 1) (40, 0);
	END_FUZZIFY
	
	FUZZIFY playerStrength					// Fuzzify playerStrenght: { 'low', 'medium','high' }
			TERM low := (0, 1) (20, 1) (40, 0);
			TERM medium := trian 40 60 70;
			TERM high := (60, 0) (80, 1) (100, 1);
	END_FUZZIFY
	
	FUZZIFY enemyStrength				// Fuzzify enemyStrenght: { 'low', 'medium','high' }
			TERM low := (0, 1) (20, 1) (40, 0);
			TERM medium := trian 40 60 70;
			TERM high := (60, 0) (80, 1) (100, 1);
	END_FUZZIFY
	
	DEFUZZIFY victory					// Defzzzify output variable 'victory' : {'low', 'normal', 'high' }
			TERM low := (0, 1) (45, 0);
			TERM normal := trian 40.0 70.0 80.0; 
			TERM high := (60, 0) (100, 1); 
			METHOD : COG;
			DEFAULT := 0;
	END_DEFUZZIFY
	
	RULEBLOCK No1
			AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
			ACT : MIN;			// Use 'min' activation method
			ACCU : MAX;			// Use 'max' accumulation method
			
			RULE 1 : IF weapon IS deadly OR enemyStrength IS low THEN victory IS high;
			RULE 2 : IF weapon IS deadly THEN victory IS high;
			RULE 3 : IF playerStrength IS NOT low OR weapon IS medium THEN victory IS normal;
			RULE 4 : IF enemyStrength IS high OR weapon IS light THEN victory IS low;
			RULE 5 : IF playerStrength IS low AND weapon IS NOT deadly THEN victory IS low;
	END_RULEBLOCK

END_FUNCTION_BLOCK